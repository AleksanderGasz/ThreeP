@namespace ThreeP.Modules.Trips
@page "/trips"
@inject TripService TripService
@inject ShowResultService ShowResultService

@* <MTitle Name="Tripy"/> *@

<MudGrid>
    <MudItem xs="12">
        <TripUpdate T="Trip" Item="item" ItemChanged="UpdateItem"/>
    </MudItem>
    <MudItem xs="12">
        <TripGrid T="Trip" Items="Trips" OnEdit="Edit" OnDelete="Delete"/>
    </MudItem>
</MudGrid>
@* <MacVerticalSpacer/> *@

@code {
    [CascadingParameter] public AppState AppState { get; set; }
    Guid? userId => AppState.UserId;
    [PersistentState] List<Trip>? Trips { get; set; } = [];
    Trip item = new();

    protected override async Task OnInitializedAsync() => await Get();


    async Task Get() => Trips = await TripService.Get([x => x.Set], [x => x.UserId == userId]);


    async Task Edit(Trip arg) => item = arg;


    async Task Delete(Guid? id)
    {
        var result = await TripService.Delete(id);
        ShowResultService.ShowResultMessage(result);
        await Get();
    }


    async Task UpdateItem(Trip? arg)
    {
        item = arg;
        item.UserId = userId;
        var result = await TripService.UpsertTrip(item);
        ShowResultService.ShowResultMessage(result);
        await Get();
    }
}